Declare @decimal decimal(21,18)
select @decimal=lDigDec from CMPNY c inner join CURMST cm on c.lCurrId=cm.lid where c.lId=27;
with vTxnHdr as (Select d.lTypId,dt.sName,dt.lFinTyp,d.lId,d.lClosed,d.bDel
,d.dtDocDate as dtDueDate
,d.dtDocDate,d.dTotal,d.sPrefix,d.lDocNo,d.sExtNo,d.sDocNo,d.lCurrId,d.lPayTrmId,d.dCurrCnv,(case when dt.bEmpDet > 0 then da.lEmpId Else d.lEmpId End) as lEmpId,da.lLine,0 as lSubLine,da.lAccId,da.lAstId,d.lCompId,da.lPrjId,da.lDimId,d.sNarr as sNarr1,da.sNarr,da.dAmtDr,da.dAmtCr,da.dOtstndAmt,da.dRate
,d.lLocId
,case when isnull(g.lPrevId,0)=0 then isnull(g.lId,0) else isnull(g.lPrevId,0) end as GEoPrevId
 from TXNTYP as dt inner join TXNHDR as d on dt.lTypId=d.lTypId and dt.lFinTyp<2 and (dt.bComp=0 and dt.bPrjDet=0 and dt.bProfitCenter=0)
 inner join TXNACC as da on d.lId=da.lId
 left join BUSMST bm on da.lAccId=bm.lAccId and da.lLine>0 and bm.bDel = 0
 left join BUSADD ba on bm.lId = ba.lId and ba.bDefault=1
 left join GEOLOC as g on d.lLocId = g.lId
 where d.bDel=0 and da.bDel=0
 and d.dtDocDate<=CONVERT(VARCHAR(8), GETDATE(), 112)
 Union All 
Select d.lTypId,dt.sName,dt.lFinTyp,d.lId,d.lClosed,d.bDel
,d.dtDocDate as dtDueDate
,d.dtDocDate,d.dTotal,d.sPrefix,d.lDocNo,d.sExtNo,d.sDocNo,d.lCurrId,d.lPayTrmId,d.dCurrCnv,(case when dt.bEmpDet > 0 then da.lEmpId Else d.lEmpId End) as lEmpId,ds.lLine,ds.lSubLine,da.lAccId,da.lAstId
,ds.lCompId,ds.lPrjId
,ds.lDimId,d.sNarr as sNarr1,da.sNarr,ds.dAmtDr,ds.dAmtCr
,ds.dOtstndAmt,da.dRate
,d.lLocId
,case when isnull(g.lPrevId,0)=0 then isnull(g.lId,0) else isnull(g.lPrevId,0) end as GEoPrevId
  from TXNTYP as dt inner join TXNHDR as d on dt.lTypId=d.lTypId and not (dt.bComp=0 and dt.bPrjDet=0 and dt.bProfitCenter=0)
 inner join TXNACC as da on d.lId=da.lId
 inner join TXNACCSUB as ds on da.lId=ds.lId and da.lLine=ds.lLine and ds.cTyp='P' and ds.bDel=0
 left join BUSMST bm on da.lAccId=bm.lAccId and da.lLine>0 and bm.bDel = 0
 left join BUSADD ba on bm.lId = ba.lId and ba.bDefault=1
 left join GEOLOC as g on d.lLocId = g.lId
 where d.bDel=0 and da.bDel=0 
  and d.dtDocDate<=CONVERT(VARCHAR(8), GETDATE(), 112)
)
Select distinct d.* into #TXNACC from vTxnHdr as d
 inner join ACCMST as a  on d.lAccId=a.lId 
 where (d.dAmtDr+d.dAmtCr>0) 
 and d.lCompId in (3,4,27,28,40,93,7,8,9,25,26)
 and d.lClosed<=0
;
 Update #TXNACC set lLocId = ba.lLocId
 from #TXNACC t inner join BUSMST b on t.lAccId=b.lAccId 
 inner join BUSADD ba on ba.lid =b.lId and ba.bDefault=1
 where t.lFinTyp<2 and t.lFinTyp not in (-1,-2)
Update #TXNACC set GEoPrevId=a.GEoPrevId1
 from(
select case when isnull(g.lPrevId,0)=0 then isnull(g.lId,0) else isnull(g.lPrevId,0) end as GEoPrevId1,d.lId,d.lLocId 
from #TXNACC d left join GEOLOC as g on d.lLocId = g.lId 
 )a 
 where a.lId=#TXNACC.lId and a.lLocId=#TXNACC.lLocId and isnull(#TXNACC.GEoPrevId,0)=0 
 Select distinct d.lTypId,cu.sName as CurType,lFinTyp,d.sName,d.dCurrCnv,c1.sName CurType1,isnull(case when not d.lCurrId = 0 then (Select top 1 cd.dCurrCnv  From CURDET cd where cd.lid=1 and lCurrId = 0 and dtWefDate<d.dtDocDate  order by dtWefDate desc) else d.dCurrCnv end,1) as CurRate, d.lId, d.sPrefix, d.lDocNo as TrnNo, d.sExtNo, d.sDocNo as sDocument, Convert(VarChar(20),d.dtDocDate) as mDocDate, Convert(VarChar(20), d.dtDueDate)
 as mDueDate,d.dtDueDate,d.dtDocDate,d.dTotal,d.bDel,d.lClosed,pt.sName as PayTrm,isnull(pt.dValue,0) as PayTrmDays,cm.lId as lCompId,cm.sRemarks as CompanyName
,Geo.sName as Location 
,Geo1.sName as Location1 
,d.sNarr as Narration 
 into #TXNHDR from #TXNACC as d 
inner join CURMST cu on d.lCurrId = cu.lId
 inner join CMPNY as cm on d.lCompId=cm.lId 
 inner join CURMST as c1 on cm.lCurrId=c1.lId 
inner join ACCMST as a on d.lAccId=a.lId 
inner join ACCTYP act on  act.lTypId=a.lTypId
left join GEOLOC Geo on  d.lLocId=Geo.lId
 left join GEOLOC Geo1 on  d.GEoPrevId=Geo1.lId
  left join PayTrm as pt on d.lPayTrmId=pt.lId 
 where d.bDel=0 and cm.lId in (3,4,27,28,40,93,7,8,9,25,26)
  and act.cLdgTyp='C'
  Select d.lId 
 ,isnull(Max(Case when cf.sName='Customer PO Date' then sValue Else '' End),'') as [Customer PO Date] 
,isnull(Max(Case when cf.sName='Customer PO No.' then sValue Else '' End),'') as [Customer PO No.] 
,isnull(Max(Case when cf.sName='Item Name' then sValue Else '' End),'') as [Item Name] 
,isnull(Max(Case when cf.sName='Destination' then sValue Else '' End),'') as [Destination] 
,isnull(Max(Case when cf.sName='Bank Details' then sValue Else '' End),'') as [Bank Details] 

 into #vTXNCF  from #TXNHDR as d inner join TXNCF as cf on d.lId=cf.lId and cf.lLine=0 Group by d.lId 
;
With vBusCon as (Select ROW_NUMBER ()over(Partition by lid order by lid) as Rowno, bc.* From BUSCNT bc )  
,vAcc as (Select distinct a.lId, a.sCode, a.sName,act.cAccTyp,c.sName as GroupName,max(dCreditLimit) dCreditLimit,max(dCreditDay) dCreditDay ,act.cLdgTyp ,
isnull(Case when ba.lMSMETyp=1 then 'Micro' when ba.lMSMETyp=2 then 'Small' when ba.lMSMETyp=3 then 'Medium' end,'') as sMSME,
case when  isnull(Max(bc.sName),'')='' then isnull(Max(ad.sName),'') else isnull(Max(bc.sName),'') end  as ConName, 
case when isnull(Max(bc.sMobile),'')='' then  isnull(Max(ad.sMobile),'') else isnull(Max(bc.sMobile),'') end as ConMobile  
from ACCMST as a inner join ACCTYP act on  act.lTypId=a.lTypId  
left join BUSMST b on b.lAccId=a.lId 
left join [BUSADD] ad on ad.lId =b.lId and ad.bDefault=1 
left join vBusCon bc on b.lid=bc.lid and Rowno=1
left join (Select Max(lMSMETyp)lMSMETyp,lId From BUSADD Group BY lId)as ba on b.lId=ba.lId 
 inner join COAMST c on a.lCoaId=c.lId  
 where 1=1
  and act.cLdgTyp='C'
Group by  a.lId, a.sCode, a.sName,act.cAccTyp,act.cLdgTyp,ba.lMSMETyp,c.sName
)
Select * into  #vACC from vACC;
With vTxnCf1 as (Select d.lId
 ,Max(Case when cf.sName like '%Reference No.%' or cf.sName like '%Invoice No.%' then sValue Else '' End) as RefNo
 ,Max(Case when cf.sName like '%Reference Dt.%' or cf.sName like '%Invoice Dt.%' then sValue Else '' End) as RefDate
 from #TXNHDR as d 
inner join TXNCF as cf on d.lId=cf.lId where  not sValue='' and cf.lLine=0 and (cf.sName like '%Reference Dt.%' or cf.sName like '%Invoice Dt.%' or cf.sName like '%Reference No.%' or cf.sName like '%Invoice No.%'   ) and d.bDel=0 Group by d.lId)
Select * into #vTXNCF1 from vTXNCf1;
 with  vTxnAcc as (select distinct d.lId, d.lTypId,d.lLine, d.lAccId, a.GroupName,d.dAmtCr, d.dAmtDr, d.dOtstndAmt,(d.dRate *d.dCurrCnv) as dRate
 ,dCreditLimit CrLimit,dCreditDay as CrDays
 , Case when d.dtDueDate <> 0 then isnull( CONVERT(int,DATEDIFF(DAY,Convert(VarChar,d.dtDueDate,112), 
 Convert(VarChar,CONVERT(datetime, CONVERT(VARCHAR(10), 20231031, 111), 111),112))),0) Else 0 End AS OverdueDays,
Case when d.dtDueDate <> 0 then Convert(VarChar,CONVERT(datetime, CONVERT(VARCHAR(10),d.dtDueDate, 111), 111),112) else  Convert(VarChar, d.dtDueDate) end OverdueDate
 from #TXNACC as d inner join #vAcc a on a.lid=d.lAccId 
left outer join #vTxnCf1 cf on d.lId=cf.lId 
inner join #TXNHDR as dh on d.lid = dh.lid 
 )
 ,vTxnSett as (Select d.lId, d.lLine, case when max(d.dAmtDr)>0    then isnull(Sum(ds.dAdjAmtDr-ds.dAdjAmtcr),0) else isnull(Sum(ds.dAdjAmtCr-ds.dAdjAmtDr),0) end  as dAmt,
 case when max(d.dAmtDr)>0 then   case when d.lFinTyp in (-5,-6,-7,-8) then  Sum((ds.dAdjAmtDr-ds.dAdjAmtCr)/d.dCurrCnv) else Sum((ds.dAdjAmtDr-ds.dAdjAmtCr)/ds.dCurrCnv)  end  
 else case when d.lFinTyp in (-5,-6,-7,-8) then  Sum((ds.dAdjAmtCr-ds.dAdjAmtDr)/d.dCurrCnv) else Sum((ds.dAdjAmtCr-ds.dAdjAmtDr)/ds.dCurrCnv) end end dAmtFC 
 ,isnull(ds.bSystem,0) bSystem from 
 #TXNACC d inner join #vAcc a on a.lid=d.lAccId 
 left join 
 (Select ds.dAdjAmtDr,ds.dAdjAmtcr,ds.lId,ds.lLine,ds.bSystem,ds.lAccId ,d.dCurrCnv  From #TXNACC d 
 inner join TXNFINSET as ds  on ds.lId=d.lId and d.lLine=ds.lLine and d.bDel=0  and d.lClosed<=0  
 inner join TXNHDR as dh on ds.lRefId=dh.lId 
 inner join ACCMST as a on d.lAccId=a.lId inner join ACCTYP as at on a.lTypId=at.lTypId and not at.bDocAdj=0  
 inner join TxnTyp t2 on t2.lTypId=ds.lRefTypId and t2.lFinTyp<2
 where dh.bDel=0 and dh.lClosed<=0 and dh.dtDocDate<=CONVERT(VARCHAR(8), GETDATE(), 112)
 and dh.lCompId in (3,4,27,28,40,93,7,8,9,25,26)
 ) as ds on d.lId=ds.lId and d.lLine=ds.lLine and d.lAccId=ds.lAccId
 and d.lCompId in (3,4,27,28,40,93,7,8,9,25,26)
 Group by d.lId, d.dAmtDr, d.lLine,d.lFinTyp,ds.bSystem 
 ) 
 , vSumm as (select  lFinTyp,d.lTypId,dtDocDate, da.lAccId,a.sCode As AccCode, a.sName as AccName,da.GroupName,a.sMSME, d.sName as TrnTyp, d.lid as lid, d.sDocument as TrnNo,
 isnull((RefNo),'')RefNo, isnull((RefDate),'') RefDate ,Convert(VarChar,CONVERT(datetime, convert(varchar(10), d.mDocDate)),106)  as TrnDate,
  d.dtDueDate as DueDate , CurType,CurType1,CurRate,CrLimit,CrDays,OverdueDays,Convert(VarChar,CONVERT(datetime, convert(varchar(10), OverdueDate)),106) as OverdueDate,sum( da.dAmtCr) as dAmtCr, sum(da.dAmtDr) as dAmtDr
 ,isnull(sum((da.dAmtDr)+(da.dAmtCr)),0) AS BillAmt
, abs(isnull(sum(ds.dAmt),0)) PaidAmt 
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmt),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)-(isnull(sum(ds.dAmt),0)) end as  BillOSAmt
 ,0 UnAdjAmt
  , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmt),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)-(isnull(sum(ds.dAmt),0))  end AS OsAmt
,sum( da.dAmtCr)/CurRate as dAmtCr_FC, sum(da.dAmtDr)/CurRate as dAmtDr_FC
,(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0))/CurRate AS BillAmt_FC
, abs(isnull(sum(dAmtFC),0)) AS PaidAmt_FC
, case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then(isnull(sum(ds.dAmtFC),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate-(isnull(sum(ds.dAmtFC),0)) end as  BillOSAmt_FC
, 0  AS UnAdjAmt_FC 
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmtFC),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate-(isnull(sum(ds.dAmtFC),0))  end AS OsAmt_FC
 ,isnull(ds.bSystem,0) bSystem,PayTrm,PayTrmDays 
, d.CompanyName,d.lCompId 
,a.ConName as ConName,a.ConMobile as ConMobile  
,d.Location 
,d.Location1 
,d.Narration 
 from #TXNHDR as d inner join vTXNACC as da on d.lId=da.lId 
  inner join #vACC as a on da.lAccId=a.lId 
 inner join vTxnSett as ds on da.lId=ds.lId and da.lLine=ds.lLine 
  left join #vTxnCf1 as cf on d.lId=cf.lId
 where lFinTyp in (-1,-2) and da.lLine=0
 Group by lFinTyp,d.lTypId,dtDocDate, da.lAccId,a.sCode, a.sName,da.GroupName,a.sMSME, d.sName , d.lid , d.sDocument, RefNo, RefDate , d.mDocDate 
 , d.dtDueDate  , CurType,CurType1,CurRate,CrLimit,CrDays,OverdueDays,OverdueDate,bSystem,PayTrm,PayTrmDays ,cLdgTyp
, d.CompanyName,d.lCompId 
,a.ConName,a.ConMobile  
,d.Location 
,d.Location1 
,d.Narration 
 Union All
 select  lFinTyp,d.lTypId,dtDocDate, da.lAccId,a.sCode As AccCode, a.sName as AccName,da.GroupName,a.sMSME, d.sName as TrnTyp, d.lid as lid, d.sDocument as TrnNo,
 isnull((case when lFinTyp =-13 then cf1.RefNo else cf.RefNo end),'')RefNo, isnull((case when lFinTyp =-13 then cf1.RefDate else cf.RefDate end),'') RefDate ,Convert(VarChar,CONVERT(datetime, convert(varchar(10), d.mDocDate)),106)  as TrnDate,
 d.dtDueDate as DueDate , CurType,CurType1,CurRate,CrLimit,CrDays,OverdueDays,Convert(VarChar,CONVERT(datetime, convert(varchar(10), OverdueDate)),106) as OverdueDate,sum( da.dAmtCr) as dAmtCr, sum(da.dAmtDr) as dAmtDr
 ,case  when lFinTyp =-13 and not Max(da.dRate)=0 then Max(da.dRate)  when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then 0  else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0) end AS BillAmt
 ,  abs(isnull(sum(ds.dAmt),0)-(case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)  else 0 end)) PaidAmt  
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmt),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)-(isnull(sum(ds.dAmt),0)) end as  BillOSAmt
 ,case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then  isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)-(isnull(sum(ds.dAmt),0)) else 0  end AS UnAdjAmt
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmt),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)-(isnull(sum(ds.dAmt),0))  end AS OsAmt
 ,sum( da.dAmtCr)/CurRate as dAmtCr_FC, sum(da.dAmtDr)/CurRate as dAmtDr_FC
 ,case when lFinTyp =-13 and not Max(da.dRate)=0 then Max(da.dRate)  when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then 0  else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0) end/CurRate AS BillAmt_FC
 ,  abs(isnull(sum(ds.dAmtFC),0)-(case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)  else 0 end)/CurRate) as PaidAmt_FC 
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then(isnull(sum(ds.dAmtFC),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate-(isnull(sum(ds.dAmtFC),0)) end as  BillOSAmt_FC
 ,case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then  isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate-(isnull(sum(ds.dAmtFC),0)) else 0  end AS UnAdjAmt_FC
 , case when (cLdgTyp='S' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)>0) or (cLdgTyp='C' and  isnull(sum((da.dAmtDr)-(da.dAmtCr)),0)<0) then (isnull(sum(ds.dAmtFC),0))-(isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate) else isnull(sum((da.dAmtDr)+(da.dAmtCr)),0)/CurRate-(isnull(sum(ds.dAmtFC),0))  end AS OsAmt_FC
 ,isnull(ds.bSystem,0) bSystem ,PayTrm,PayTrmDays
, d.CompanyName,d.lCompId 
,a.ConName as ConName,a.ConMobile as ConMobile  
,d.Location 
,d.Location1 
,d.Narration 
 from #TXNHDR as d inner join vTXNACC as da on d.lId=da.lId 
  inner join #vACC as a on da.lAccId=a.lId 
 inner join vTxnSett as ds on da.lId=ds.lId and da.lLine=ds.lLine 
  left join #vTxnCf1 as cf on ds.lId=cf.lId and not lFinTyp=-13 
  left join #vTxnCf1 as cf1 on d.lId=cf1.lId and lFinTyp=-13  
  Where lFinTyp not in (-1,-2)
 Group by lFinTyp,d.lTypId,dtDocDate, da.lAccId,a.sCode, a.sName,da.GroupName,a.sMSME, d.sName , d.lid , d.sDocument,  cf1.RefNo, cf.RefNo ,cf.RefDate , cf1.RefDate ,d.mDocDate 
 , d.dtDueDate  , CurType,CurType1,CurRate,CrLimit,CrDays,OverdueDays,OverdueDate,bSystem,PayTrm,PayTrmDays ,cLdgTyp 
, d.CompanyName,d.lCompId 
,a.ConName ,a.ConMobile  
,d.Location 
,d.Location1 
,d.Narration 
 )
 , vSumm2 as (select row_number() over (Order by AccName,lAccId,dtDocDate,lid) as myRow,* from vSumm
  where bSystem = 0 
)
 Select lFinTyp,row_number() over (Partition by lAccId Order by AccName,lAccId) as TmpRow,myRow,lAccId,AccCode, AccName,GroupName,sMSME,da.lTypId,da.lid, TrnTyp, TrnNo, TrnDate 
,[Customer PO Date] ,[Customer PO No.] ,[Item Name] ,[Destination] ,[Bank Details] 
,RefNo, RefDate, PayTrm,PayTrmDays ,DueDate, CurType,CurType1,CurRate, BillAmt, PaidAmt,case when abs(BillOSAmt) <0.0001 then 0 else BillOSAmt end as BillOSAmt,CrLimit,CrDays,OverdueDays,OverdueDate,UnAdjAmt , case when abs(OsAmt) <0.0001 then 0 else OsAmt end as OsAmt ,BillAmt_FC, PaidAmt_FC,case when abs(BillOSAmt_FC) <0.0001 then 0 else BillOSAmt_FC end as BillOSAmt_FC,UnAdjAmt_FC ,case when abs(OsAmt_FC) <0.0001 then 0 else OsAmt_FC end as OsAmt_FC 
, CompanyName,lCompId 
,ConName,ConMobile  
, Location 
, Location1 
, Narration 
 into #temp from vSumm2 da 
 left join #vTXNCF as cf on da.lId=cf.lId
 --Update  #temp Set  AccCode = '',AccName = '',GroupName = '',sMSME='' 
 --,ConName = '',ConMobile = ''
 --where TmpRow<>1 
 insert into #temp	
 Select 0,max(TmpRow+2),isnull(max(myRow),0),0,'', '','','',0,0, '', 'Total Document(s):',0
,'' as [Customer PO Date] ,'' as [Customer PO No.] ,'' as [Item Name] ,'' as [Destination] ,'' as [Bank Details] 
,'', '', '' ,0,0, '','',0, isnull(Sum(BillAmt),0) , isnull(Sum(PaidAmt),0) , isnull(Sum(BillOSAmt),0),0,0,0,0,isnull(Sum(UnAdjAmt),0), isnull(Sum(OsAmt),0),isnull(Sum(BillAmt_FC),0) , isnull(Sum(PaidAmt_FC),0) , isnull(Sum(BillOSAmt_FC),0),isnull(Sum(UnAdjAmt_FC),0), isnull(Sum(OsAmt_FC),0)
, '' CompanyName,0 lCompId 
,'' ConName, '' ConMobile  
,'' Location 
,'' Location1 
,'' Narration 
 From #temp
 insert into #temp 
 Select 0,isnull(max(TmpRow+1),0),isnull(max(myRow),0),lAccId,'', '','','',0,0, '', 'Total',0 
,'' as [Customer PO Date] ,'' as [Customer PO No.] ,'' as [Item Name] ,'' as [Destination] ,'' as [Bank Details] 
,'', '', '' ,0,0,  '','',0, isnull(Sum(BillAmt),0) , isnull(Sum(PaidAmt),0)  [Paid Amt], isnull(Sum(BillOSAmt),0),0,0,0,0,isnull(Sum(UnAdjAmt),0), isnull(Sum(OsAmt),0),isnull(Sum(BillAmt_FC),0) , isnull(Sum(PaidAmt_FC),0) , isnull(Sum(BillOSAmt_FC),0),isnull(Sum(UnAdjAmt_FC),0), isnull(Sum(OsAmt_FC),0)
,'' CompanyName,0 lCompId 
, '' ConName,'' ConMobile  
,''  Location 
,'' Location1 
,'' Narration 
 From #temp 
 where lid <> 0 
 Group by lAccId 
 --Update  #temp Set  AccCode = '',AccName = '',GroupName = '',sMSME='' 
 --,ConName = '',ConMobile = ''
 --where TmpRow<>1 
 Select 
 TmpRow, myRow,lAccId,lTypId,#temp.lid,
 CompanyName as  [Company Name],lCompId,
 AccCode As [Party Code], AccName as [Party Name], GroupName
,ConName as [ConName],ConMobile as [ConMobile]  
, TrnTyp as [Trans Type], TrnNo as [Trans No], TrnDate [Trans Date],RefNo [Ref No], RefDate [Ref Date]
,[Customer PO Date] ,[Customer PO No.] ,[Item Name] ,[Destination] ,[Bank Details] 
,PayTrm  as [Payment Term]
,PayTrmDays  as [Payment Term Days]
, Location 
, Location1 
 ,CurType1 as [Currency Code],1 as [Conversion Rate]
 , BillAmt as [Bill Amt], PaidAmt as [Paid Amt]
 , BillOSAmt as [Bill OS Amt]
 ,CrLimit as [Credit Limit], 0 As [Credit Limit Days]
 , OverdueDate as [Overdue Date]
 , OverdueDays as [Overdue Days]
 ,UnAdjAmt as [Unadjustment Amt], OsAmt as [Outstanding Amt]
, Narration 
 ,isnull((SELECT COUNT(lAccId) FROM #temp HAVING COUNT(lAccId) > 1),0) as lRecordCount  
 From #temp
 --where myRow between 1 and 10 or TrnNo like '%Total Document(s):%'
 where myRow > 0 or TrnNo like '%Total Document(s):%'
 order by myRow,TmpRow,lAccId
; Drop Table if Exists #temp,#TXNHDR,#vTXNCF,#vACC,#TXNACC,#vTXNCF1
